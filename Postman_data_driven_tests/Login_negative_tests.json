{
	"info": {
		"_postman_id": "728797d9-4c17-4915-82ae-b0751703aff5",
		"name": "/login endpoint data driven tests - negative [GitHub Actions]",
		"description": "Collection of tests for the GAD application endpoint /login.\n\nThe collection contains data-driven negative tests.  \nGAD documentation available at:  \n[https://github.com/jaktestowac/gad-gui-api-demo](https://github.com/jaktestowac/gad-gui-api-demo)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21196236"
	},
	"item": [
		{
			"name": "Invalid credentials from file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let responseData;\r",
							"\r",
							"const responseSchema = {\r",
							"    \"type\": \"object\",\r",
							"    \"properties\": {\r",
							"        \"status\": {\r",
							"            \"type\": \"integer\", nullable: false\r",
							"        },\r",
							"        \"message\": {\r",
							"            \"type\": \"string\", nullable: false\r",
							"        }\r",
							"    },\r",
							"    \"required\": [\"status\", \"message\"]\r",
							"};\r",
							"\r",
							"pm.test(\"Response status code should be 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"\r",
							"pm.test(\"Response is in JSON format\", function () {\r",
							"    pm.response.to.be.json;\r",
							"    responseData = pm.response.json();\r",
							"});\r",
							"\r",
							"pm.test(\"Response has valid schema\", function () {\r",
							"    pm.response.to.has.jsonSchema(responseSchema);\r",
							"});\r",
							"\r",
							"pm.test(\"Message is a non-empty string\", function () {\r",
							"    pm.expect(responseData.message).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Value should not be empty\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response message is 'Incorrect email or password'\", function () {\r",
							"    const responseMessage = pm.response.json().message;\r",
							"    pm.expect(responseMessage).to.equal(\"Incorrect email or password\");\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": {{email}},\n    \"password\": {{password}}\n}",
					"options": {
						"raw": {
							"headerFamily": "json",
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"login"
					]
				}
			},
			"response": [
				{
					"name": "incorrect user",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"Wrong-user\",\n    \"password\": \"{{correctUserPassword}}\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"status": "Unauthorized",
					"code": 401,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Thu, 31 Aug 2023 09:56:47 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "CF-Ray",
							"value": "7ff467d65feec019-WAW"
						},
						{
							"key": "CF-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache"
						},
						{
							"key": "ETag",
							"value": "W/\"3f-QSn1acw6fvJi/R6Y2AW0LDQrdC4\""
						},
						{
							"key": "Expires",
							"value": "-1"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "access-control-allow-credentials",
							"value": "true"
						},
						{
							"key": "pragma",
							"value": "no-cache"
						},
						{
							"key": "x-powered-by",
							"value": "Express"
						},
						{
							"key": "x-render-origin-server",
							"value": "Render"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "alt-svc",
							"value": "h3=\":443\"; ma=86400"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": 401,\n    \"message\": \"Incorrect email or password\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"//displaying the request name in the console for better tracking of test execution\r",
					"console.log(pm.info.requestName);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}